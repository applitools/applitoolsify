name: iOS Deployment
run-name: ${{ github.actor }} is performing iOS deployment
on: [push]
jobs:
  deploy:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest, windows-latest, ARM64]
      fail-fast: false
    steps:
      - uses: actions/checkout@v2
      
      - name: Set up Python
        if: ${{ matrix.os != 'ARM64' && !failure() }}
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      
      - name: Setup jfrog
        if: ${{ !failure() && matrix.os != 'ARM64' }}
        uses: jfrog/setup-jfrog-cli@v3
        with:
          version: latest

      - name: Install dependencies
        if: ${{ !failure() && matrix.os == 'ARM64'}}
        run: |
          pip3 install pytest==6.2.5 pytest-xdist==2.5.0 pyinstaller

      - name: Install dependencies
        if: ${{ matrix.os != 'ARM64'}}
        run: |
          pip install pytest==6.2.5 pytest-xdist==2.5.0 pyinstaller
      
      - name: Make standalone (win)
        if: ${{ matrix.os == 'windows-latest' }}
        env:
          JF_TO_IMPORT: ${{ secrets.JF_TO_IMPORT }}
        run: |
          echo "Importing jfrog config"
          jf config import "%JF_TO_IMPORT%"
          echo "Making bundle"
          cd src
          dir
          .\bundle.bat
        
      - name: Make standalone (mac)
        if: ${{ matrix.os == 'macOS-latest' }}
        env:
          JF_TO_IMPORT: ${{ secrets.JF_TO_IMPORT }}
        run: |
          echo "Importing jfrog config"
          jfrog config import "$JF_TO_IMPORT"
          echo "Making bundle"
          cd src
          ./bundle.sh
      
      - name: Make standalone (mac m1)
        if: ${{ matrix.os == 'ARM64' }}
        env:
          JF_TO_IMPORT: ${{ secrets.JF_TO_IMPORT }}
        run: |
          echo "Importing jfrog config"
          jfrog config import "$JF_TO_IMPORT"
          echo "Making bundle"
          cd src
          ./bundle.sh
      
      - name: Make standalone (Linux)
        if: ${{ matrix.os == 'ubuntu-latest' }}
        env:
          JF_TO_IMPORT: ${{ secrets.JF_TO_IMPORT }}
        run: |
          echo "Importing jfrog config"
          jfrog config import "$JF_TO_IMPORT"
          echo "Making bundle"
          cd src
          ./bundle.sh
