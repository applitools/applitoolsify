name: Test on platforms
on: push
jobs:
  dist-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{inputs.ref || github.ref}}
      - uses: actions/setup-python@v3
        with:
          python-version: "3.7"

      - name: Build packages
        working-directory: "."
        run: make build
      - uses: actions/upload-artifact@v3
        with:
          name: "applitoolsify.pyz"
          if-no-files-found: error
          path: "dist/"

  check-patching-android:
    needs: dist-build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest]
        python-version: ["3.7", "3.10"]
    steps:
      - name: Set the LongPathsEnabled on Windows
        if: runner.os == 'Windows'
        run: 'New-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\FileSystem" -Name "LongPathsEnabled" -Value 1 -PropertyType DWORD -Force'
      - name: Set up Python ${{ matrix.python-version }}
        if: ${{ !failure() }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Set up Java 11 for apk patcher
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '11'
      - uses: actions/checkout@v2
        if: ${{ !failure() }}

      - name: Install dependencies
        if: ${{ !failure() }}
        run: |
          python -m pip install --upgrade pip
          pip install pytest==6.2.5

      - uses: actions/download-artifact@v3
        with:
          name: applitoolsify.pyz

      - name: Run tests
        if: ${{ !failure() }}
        working-directory: "."
        run: pytest tests/test_instrument_android.py

  check-patching-ios:
    needs: dist-build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest, windows-latest]
        python-version: ["3.7", "3.10"]
    steps:
      - name: Set the LongPathsEnabled on Windows
        if: runner.os == 'Windows'
        run: 'New-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\FileSystem" -Name "LongPathsEnabled" -Value 1 -PropertyType DWORD -Force'
      - name: Set up Python ${{ matrix.python-version }}
        if: ${{ !failure() }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - uses: actions/checkout@v2
        if: ${{ !failure() }}

      - name: Install dependencies
        if: ${{ !failure() }}
        run: |
          python -m pip install --upgrade pip
          pip install pytest==6.2.5

      - uses: actions/download-artifact@v3
        with:
          name: applitoolsify.pyz

      - name: Run tests
        if: ${{ !failure() }}
        working-directory: "."
        run: pytest tests/test_instrument_ios.py

  check-e2e:
    needs: dist-build
    runs-on: ubuntu-latest
    steps:
      - name: Set up Python
        if: ${{ !failure() }}
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Set up Java 11 for apk patcher
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '11'
      - uses: actions/checkout@v2
        if: ${{ !failure() }}

      - name: Install dependencies
        if: ${{ !failure() }}
        run: |
          python -m pip install --upgrade pip
          pip install pytest==6.2.5 pytest-xdist==2.5.0 eyes_selenium==5.9.0 requests==2.28

      - uses: actions/download-artifact@v3
        with:
          name: applitoolsify.pyz

      - name: Run tests
        if: ${{ !failure() }}
        env:
          SAUCE_USERNAME: ${{ secrets.SAUCE_USERNAME }}
          SAUCE_ACCESS_KEY: ${{ secrets.SAUCE_ACCESS_KEY }}
          APPLITOOLS_API_KEY: ${{ secrets.APPLITOOLS_API_KEY }}
        working-directory: "."
        run: pytest -n2 tests/test_e2e.py
